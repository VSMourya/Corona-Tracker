{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/PickCountry/PickCountry.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/PickCountry/PickCountry.module.css","images/virus.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","country","globalCases","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Math","ceil","countriesList","fetchData","a","changeableURL","console","log","axios","get","fetchDailyData","requiredData","map","Each","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","hoverBorderColor","backgroundColor","options","legend","display","lineChart","length","borderColor","fill","PickCountry","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","href","rel","image","src","image1","alt","typo","Charts","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bb74ec4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Wx9l\",\"card\":\"Cards_card__3w4sR\",\"infected\":\"Cards_infected__2TpKG\",\"recovered\":\"Cards_recovered__3ez9b\",\"deaths\":\"Cards_deaths__nk1NO\"};","import React from 'react';\r\nimport { Card,CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames'\r\n\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate},country,globalCases}) => {\r\n\r\n    if (!confirmed){\r\n        return <div> \r\n            <h2>\"Loading...\"</h2>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Grid container spacing={1} justify=\"center\">\r\n            <Grid item xs={12} md={2} component={Card} className={cx(styles.card, styles.infected)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Infected\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Number of active cases of COVID-19.\r\n                </Typography>\r\n                { confirmed ?\r\n                <Typography variant=\"body2\" component=\"p\" >\r\n                {country ? country : \"Worldwide\"} Contribution to Global Cases : {<CountUp start={0}   end = {confirmed ? Math.ceil(((confirmed.value)*100)/globalCases.value) : \"100\" }duration={2.75} separator=\",\" />} % \r\n                </Typography> : \"Data Unavailable\"\r\n}   \r\n            </CardContent>\r\n            </Grid>\r\n            <Grid item xs={12} md={2} component={Card} className={cx(styles.card, styles.recovered)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Recovered\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Number of recoveries from COVID-19.\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                {country} Recovery Rate : {<CountUp start={0}  end={ Math.ceil((recovered.value*100)/confirmed.value) } duration={2.75} separator=\",\" />} %\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            </Grid>\r\n            <Grid item xs={12} md={2} component={Card} className={cx(styles.card, styles.deaths)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Deaths\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                Number of deaths caused by COVID-19.\r\n                </Typography>\r\n                \r\n                <Typography variant=\"body2\" component=\"p\">\r\n                {country} Death Rate : {<CountUp start={0}  end={ Math.ceil((deaths.value*100)/confirmed.value )} duration={2.75} separator=\",\" />} %\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n );\r\n};\r\n\r\nexport default Cards","import axios from \"axios\"\r\n\r\nconst url =  \"https://covid19.mathdro.id/api\"\r\nconst fetchedDailyData = \"https://covid19.mathdro.id/api/daily\"\r\nconst countriesList = \"https://covid19.mathdro.id/api/countries\"\r\n\r\nexport const fetchData = async (country) => {\r\n    \r\n    let changeableURL = url;\r\n\r\n    if (country){\r\n        changeableURL = countriesList + \"/\"  + country\r\n        console.log(\"-------here is the url ----- > \",changeableURL)\r\n    }\r\n\r\n    try{\r\n\r\n        const {data : {confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableURL);\r\n        return {confirmed, recovered, deaths, lastUpdate };\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try{\r\n        \r\n        const { data } = await axios.get(fetchedDailyData);\r\n\r\n        const requiredData = data.map((Each) => ({\r\n            confirmed : Each.confirmed.total,\r\n            deaths : Each.deaths.total,\r\n            date : Each.reportDate,\r\n        }))\r\n\r\n        return requiredData\r\n\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n\r\n    try{\r\n        \r\n        const { data :{ countries } } = await axios.get(countriesList);\r\n\r\n        return countries.map((country) => country.name)\r\n        // const requiredData = data.map((Each) => ({\r\n        //     Country : Each.Country,\r\n        //     Slug : Each.Slug,\r\n        //     ISO2 : Each.ISO2,\r\n        // }))\r\n\r\n        // return requiredData\r\n\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              hoverBorderColor : \"#000\",\r\n              backgroundColor: ['rgba(150, 150, 150, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255,0,0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        \r\n        options={{\r\n          legend: { display: false },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels:dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data:dailyData.map(({confirmed}) => confirmed ),\r\n            label : \"Infected\",\r\n            borderColor : '#3333ff',\r\n            fill : true,\r\n          },{\r\n            data:dailyData.map(({deaths}) => deaths ),\r\n            label : \"Deaths\",\r\n            borderColor : 'red',\r\n            backgroundColor : 'rgba(255,0,0,0.5)',\r\n            fill : true,\r\n          }]\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n\r\n  return (\r\n    <div className = {styles.container}>\r\n       {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect }  from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './PickCountry.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst PickCountry = ({handleCountryChange}) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        setCountries(await fetchCountries());\r\n      };\r\n\r\n      fetchAPI();\r\n    }, []);\r\n\r\n    return (\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue = '' onChange={(e) => handleCountryChange(e.target.value)}>\r\n          <option value=\"\">Worldwide</option>\r\n          {countries.map((country,i) => <option key = {i} value = {country}>{country}</option>)}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    );\r\n  };\r\n  \r\nexport default PickCountry;","import React from 'react';\r\nimport { Cards, PickCountry, Charts } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n// import { styled } from '@material-ui/core/styles';\r\nimport image1 from './images/virus.png';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// import image2 from './images/thankyou.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n    globalCases : ''\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n    this.setState({ data, globalCases : data.confirmed });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country , globalCases } = this.state;\r\n    console.log(globalCases);\r\n    console.log(data);\r\n    return (\r\n      \r\n      <div className={styles.container}>\r\n        <a href='https://pngtree.com/so/covid19'  target=\"_blank\" rel=\"noopener noreferrer\" ><img className={styles.image} src={image1} alt=\"COVID-19\" /></a>\r\n        <PickCountry handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} country = {country} globalCases={globalCases}/>\r\n        <Typography className = {styles.typo} gutterBottom><h3> { country ? country : \"Worldwide\" } COVID Stats </h3></Typography>\r\n        <Charts data={data} country={country} /> \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typo\":\"App_typo__2HgYX\",\"container\":\"App_container__33u-Y\",\"image\":\"App_image__3Oy-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1V_h0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"PickCountry_formControl__25qS7\"};","module.exports = __webpack_public_path__ + \"static/media/virus.7c008b53.png\";"],"sourceRoot":""}